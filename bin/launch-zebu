#!/bin/bash

set -e

SCRIPT_DIR=$(dirname ${BASH_SOURCE})

source ${SCRIPT_DIR}/launch.sh

function usage()
{
    echo "Usage: $0 [-h] [-e env]* [-m mem]  [ cmd ]" 1>&2
    echo "               cmd: command" 1>&2
    echo "                    run - start emulation (default)" 1>&2
    echo "               -e env: load environment settings from file" 1>&2
    echo "               -m memory map: preload files into memory" 1>&2
    echo "               -h : show this message" 1>&2
    exit 1
}

function preload_memory()
{
    local map_file=$1
    local zebu_mem_file=$2

    while read line
    do
        HASH="#"
        if [[ "$line" =~ ^\s*$ || "$line" =~ ^[[:space:]]*$HASH ]]
        then
            continue
        fi
        line=$(echo $line | sed 's/\(.*\)\s*#.*/\1/')

        mem=$(eval echo $(extract_word 0 $line) )
        # addr=$(eval echo $(extract_word 1 $line) ) # ignored
        file=$(eval echo $(extract_word 2 $line))
        echo $mem $file >> $zebu_mem_file
    done < $map_file
}

MEMORY_FILES=()
ENV_FILES=("${PWD}/zebu-env.sh")

while getopts "h?e:m:" o; do
    case "${o}" in
        e)
            ENV_FILES+=("$OPTARG")
            ;;
        m)
            MEMORY_FILES+=("$OPTARG")
            ;;
        h)
            usage
            ;;
        *)
            echo "Wrong option" 1>&2
            usage
            ;;
    esac
done
shift $((OPTIND-1))
CMD=$*

if [ -z "${CMD}" ]
then
    CMD="run"
fi

## Hardware parameters that are fixed in the HW design (not configurable)

# Ports assumed to be the same across all SMC instances in the SoC
SMC_SRAM_PORTS=4
SMC_NAND_PORTS=2

SMC_SRAM_PORTS_IDXS=$(seq 0 $(($SMC_SRAM_PORTS - 1)))
SMC_NAND_PORTS_IDXS=$(seq 0 $(($SMC_NAND_PORTS - 1)))

## Configurable params of array types (must be inited before loading env)
#
# Note: all are overridable in an env.sh file.
# Note: params of array types are not overridable via environment variables.

for p in $SMC_SRAM_PORTS_IDXS
do
    declare -A HPPS_SMC_SRAM_${p}
done
for p in $SMC_NAND_PORTS_IDXS
do
    declare -A HPPS_SMC_NAND_${p}
done

for env in "${ENV_FILES[@]}"
do
    source_if_exists "${env}"
done

## Default values for various params applied if not set (neither by the env
# file nor by environment variables). Note that environment variables take
# precedence over env files.

: "${RUN_DIR:=.}"

# Default NV mem parameters (set only if not already non-zero)
#
# Note: no defaults for size, and for NAND layout params (page, oob, ecc, ppb),
# because the launch scripts are not a good place for them, because for some
# targets they are fixed by HW design; must be defined in env file.
for p in $SMC_SRAM_PORTS_IDXS
do
    set_default HPPS_SMC_SRAM_${p}[run] "${RUN_DIR}/hpps.sram.${p}.raw"
done
for p in $SMC_NAND_PORTS_IDXS
do
    set_default HPPS_SMC_NAND_${p}[run] "${RUN_DIR}/hpps.nand.${p}.raw"
done

# May be referenced in memory map files to be loaded below
RUN=$(realpath ${RUN_DIR})

## Actions commence here

mkdir -p "${RUN_DIR}"

for p in $SMC_SRAM_PORTS_IDXS
do
    init_smc_sram_img HPPS_SMC_SRAM_${p}
done
for p in $SMC_NAND_PORTS_IDXS
do
    init_smc_nand_img HPPS_SMC_NAND_${p}
done

# Must match the name in sdk/zebu/designFeatures
PRELOAD_FILE=$ZEBU/preload.mem
echo -n > "$PRELOAD_FILE"
if [ ${#MEMORY_FILES[@]} -gt 0 ]
then
    for f in "${MEMORY_FILES[@]}"
    do
        preload_memory "$f" "$PRELOAD_FILE"
    done
fi
echo "Zebu mem preload file:"
cat $PRELOAD_FILE

# The Zebu emulator can only be invoked from the SDK dir (would be nice to fix)
#
# The config vars are defined in sdk/bld/env.sh. Can't define then here because
# they are also needed to build zebu part of the SDK, so defined in sdk/Makefile.
$ZEBU_SHELL -c "cd $ZEBU && source $ZEBU_ENV && zRci run_hpsc.ucli" | tee zrci.log
