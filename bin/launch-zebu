#!/bin/bash

# Construct command to start the Zebu emulator
#
# Expects to be run on the Synopsys SCS Zebu server only. Will not work on any
# other host!
#
# Expects the HPSC SDK to have been activated by loading the SDK env.sh script
# into the shell.
#
# A screen session into the UART(s) is opened by the underlying Zebu stack
# in sdk/zebu (and beyond), and the HPPS console is named zebu-uart-hpps.
#
# To load images into any memory in the design, the caller is expected to
# construct and pass a memory map file in Zebu format, with Zebu memory IDs
# and image files in an accepted format. The functionality of specifying which
# images to load where and for creating images is also kept out of this script
# in order to avoid parsing map files here (or having an unwieldy interface
# based on environment variables).
#
# See the mkmemimg sript and conf/{,zebu/}/mem.ini memory parameters for
# creating memory images, and zebu-preload-mem script for interpreting cross
# memory map file to know which memory images to build and what to include in
# each of them.

set -e

function usage()
{
    echo "Usage: $0 [-h] [-e env]* [-m mapfile] [ cmd ]" 1>&2
    echo "               cmd: command" 1>&2
    echo "                    dry - do everything except launching Zebu" 1>&2
    echo "                    run - start emulation (default)" 1>&2
    echo "               -e env: load environment settings from file" 1>&2
    echo "               -m mapfile: file specifying what to preload into memory" 1>&2
    echo "               -h : show this message" 1>&2
    exit 1
}

run() {
    echo "$@"
    "$@"
}

ENV_FILES=("${PWD}/zebu-env.sh")

while getopts "h?e:m:" o; do
    case "${o}" in
        e)
            ENV_FILES+=("$OPTARG")
            ;;
        m)
            PRELOAD_MEM_MAP="${OPTARG}"
            ;;
        h)
            usage
            ;;
        *)
            echo "Wrong option" 1>&2
            usage
            ;;
    esac
done
shift $((OPTIND-1))
CMD=$*

if [ -z "${CMD}" ]
then
    CMD="run"
fi

# Load env file which may override some settings defaulted below,
# and set parameters also settable via the command line
for env in "${ENV_FILES[@]}"
do
    if [ -f "${env}" ]
    then
        echo "Loading env from: ${env}"
        source "${env}"
    fi
done

## Default values for various params applied if not set (neither by the env
# file nor by environment variables). Note that environment variables take
# precedence over env files.

: "${RUN_DIR:=.}"

## Actions commence here

mkdir -p "${RUN_DIR}"

# The map file needs to be copied into the sdk directory for zebu scripts to
# pick it up, unfortunately. Couldn't figure out a way to parametrize.
# Must match the name in sdk/zebu/designFeatures
ZEBU_LOAD_MEM_FILE=$ZEBU/preload.mem
if [ ! -z "${PRELOAD_MEM_MAP}" ]
then
    run cp "${PRELOAD_MEM_MAP}" "${ZEBU_LOAD_MEM_FILE}"
else
    run truncate --size 0 "${ZEBU_LOAD_MEM_FILE}"
fi
echo "Zebu memory preload file:"
cat "${ZEBU_LOAD_MEM_FILE}"
echo

# The Zebu emulator can only be invoked from the SDK dir (would be nice to fix)
#
# The config vars are defined in sdk/bld/env.sh. Can't define then here because
# they are also needed to build zebu part of the SDK, so defined in sdk/Makefile.
COMMAND+=($ZEBU_SHELL -c "cd $ZEBU && source $ZEBU_ENV && zRci run_hpsc.ucli")
echo "Final command: ${COMMAND[@]}"

echo "CMD: ${CMD}"
case "${CMD}" in
    dry)
        ;;
    run)
        "${COMMAND[@]}"
        ;;
    *)
        echo "Unknown command: ${CMD}" 1>&2
        exit 1
        ;;
esac
